trigger:
- main

pr:
- main

variables:
  # Defina suas vari√°veis de ambiente aqui
  azureSubscription: 'SubscriptionEstudos(1)(91ed451d-ef62-4c7d-9ae8-f9b32b441784)'
  resourceGroupName: 'Estudos'
  aksClusterName: 'microservicecrypto'
  acrRegistryName: 'registrocontainecryptomicroservice.azurecr.io'
  dockerComposeFile: 'docker-compose.yml'

stages:
- stage: Build
  displayName: 'Build and Push Docker Images'
  jobs:
  - job: BuildAndPush
    displayName: 'Build and Push'
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '3.1.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: |
        # Resto dos comandos de build aqui
        dotnet build
        docker-compose -f $(dockerComposeFile) build
        docker-compose -f $(dockerComposeFile) push
      displayName: 'Build and Push Docker Images'

- stage: Deploy
  displayName: 'Deploy to ACS and AKS'
  jobs:
  - job: Deploy
    displayName: 'Deploy'
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '3.1.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Log in to Azure
          az login --service-principal -u $(servicePrincipalId) -p $(servicePrincipalKey) --tenant $(tenantId)

          # ACR Login
          az acr login --name $(acrRegistryName)

          # Deploy to ACS
          az acs kubernetes install-cli
          az acs kubernetes get-credentials --resource-group $(resourceGroupName) --name $(acsClusterName)
          kubectl apply -f $(dockerComposeFile)

          # Deploy to AKS
          az aks get-credentials --resource-group $(resourceGroupName) --name $(aksClusterName)
          kubectl apply -f $(dockerComposeFile)
      displayName: 'Deploy to ACS and AKS'
