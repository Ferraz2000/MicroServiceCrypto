# Pipeline completo para build, push e deploy no AKS usando ACR
trigger:
- main

variables:
  # Vari√°veis para o Azure Container Registry (ACR)
  containerRegistry: 'registrocontainecryptomicroservice.azurecr.io'
  imageRepository: 'cryptomicroservice'
  tag: 'latest'
  imagePullSecret: 'registrocontainecryptomicroservice87cb-auth'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build and Push to ACR
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        # Construir a imagem Docker
        docker build -t $(containerRegistry)/$(imageRepository):$(tag) .
        # Autenticar e enviar a imagem para o ACR
        az acr login --name registrocontainecryptomicroservice
        docker push $(containerRegistry)/$(imageRepository):$(tag)
      displayName: 'Build and Push Docker Image to ACR'

- stage: Deploy
  displayName: Deploy stage
  jobs:
  - deployment: Deploy
    displayName: Deploy to AKS
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'CryptoMicroService.microservicecrypto'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: 'registrocontainecryptomicroservice' # Use o nome do seu ACR
              secretType: 'dockerRegistry'
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
