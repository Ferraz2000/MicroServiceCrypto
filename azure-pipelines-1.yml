trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'c332bc41-be6e-4102-8c61-f85d0eb457c6'
  imageRepositoryapi: 'cryptoapi'
  imageRepositoryweb: 'cryptoweb'
  containerRegistry: 'cryptoservice.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  dockerComposeFile: 'docker-compose.yml'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'cryptoservice9038-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildAndDeploy
    displayName: Build and Deploy
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'SubscriptionEstudos(1)(91ed451d-ef62-4c7d-9ae8-f9b32b441784)'
        azureContainerRegistry: '{"loginServer":"cryptoservice.azurecr.io", "id" : "/subscriptions/91ed451d-ef62-4c7d-9ae8-f9b32b441784/resourceGroups/Estudos/providers/Microsoft.ContainerRegistry/registries/cryptoservice"}'
        dockerComposeFile: 'docker-compose.yml'
        action: 'Build services'
        includeLatestTag: true

    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'SubscriptionEstudos(2)(91ed451d-ef62-4c7d-9ae8-f9b32b441784)'
        azureContainerRegistry: '{"loginServer":"cryptoservice.azurecr.io", "id" : "/subscriptions/91ed451d-ef62-4c7d-9ae8-f9b32b441784/resourceGroups/Estudos/providers/Microsoft.ContainerRegistry/registries/cryptoservice"}'
        dockerComposeFile: 'docker-compose.yml'
        action: 'Push services'
        includeLatestTag: true

    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'CryptoMicroService-1810.default'
    strategy:
      runOnce:
        deploy:
          steps:
         
          - task: Kubernetes@1
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: 'SubscriptionEstudos(5)(91ed451d-ef62-4c7d-9ae8-f9b32b441784)'
              azureResourceGroup: 'Estudos'
              kubernetesCluster: 'cryptoservice'
              command: 'apply'
              arguments: '-f $(System.DefaultWorkingDirectory)/manifests/deployment.yml -f $(System.DefaultWorkingDirectory)/manifests/service.yml'
              secretType: 'dockerRegistry'
              containerRegistryType: 'Azure Container Registry'
